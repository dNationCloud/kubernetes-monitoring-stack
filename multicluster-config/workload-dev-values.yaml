thanos:
  enabled: true
  queryFrontend:
    enabled: false
  query:
    dnsDiscovery:
      sidecarsService: kube-prometheus-thanos-discovery
      sidecarsNamespace: "{{ .Release.Namespace }}"
    service:
      type: NodePort
      nodePorts:
        grpc: 30901
  bucketweb:
    enabled: false
  compactor:
    enabled: false
  storegateway:
    enabled: false
  ruler:
    enabled: false

kube-prometheus-stack:
  enabled: true
  alertmanager:
    enabled: false
  grafana:
    enabled: false
  prometheus:
    prometheusSpec:
      externalLabels:
        # !IMPORTANT: each cluster must have prometheus external label 'cluster' with unique value.
        # This will be used as cluster discriminator when metrics are aggregated on observer cluster.
        cluster: "workload-cluster"
      thanos:
        logLevel: info
    thanosService: 
      enabled: true
