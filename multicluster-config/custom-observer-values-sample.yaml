# !IMPORTANT: each cluster must have prometheus and promtail external label 'cluster' with unique value.
# This will be used as cluster discriminator when metrics are aggregated on observer cluster.

thanosStorage:
  # More details about supported storage types and config options can be found here: https://thanos.io/tip/thanos/storage.md/
#  config: |-
#    type: S3
#    config:
#      endpoint: "<url-of-the-S3-endpoint>"
#      bucket: "<observer-bucket-name>"
#      access_key: "<access-key>"
#      secret_key: "<secret-key>"
#      insecure: false
#      signature_version2: false
#      part_size: 0

  config: |-
    type: S3
    config:
      endpoint: api-thanos-minio.k8s-h-dev.dnation.cloud
      bucket: observer-cluster
      access_key: thanosTenant
      secret_key: Q7zfIfKI0x0VMD
      insecure: false
      signature_version2: true
      part_size: 0

thanosQueryEnvoySidecar:
#  config:
#    - name: "workload-cluster-1"
#      listenPort: 10000
#      queryUrl: <url of exposed query component on remote workload cluster>
#      queryPort: <port of exposed query component on remote workload cluster>
#      tls:
#        certificate_chain: /certs/tls.crt
#        private_key: /certs/tls.key
#        trusted_ca: /certs/ca.crt

  config:
  - name: "workload-cluster-1"
    listenPort: 10001
    queryUrl: query-workload.dnation.cloud
    queryPort: 32443
    tls:
      certificate_chain: /certs/tls.crt
      private_key: /certs/tls.key
      trusted_ca: /certs/ca.crt

promtail:
  config:
    client:
      external_labels:
        cluster: observer-cluster
    lokiAddress: "http://{{ .Release.Name }}-loki-gateway/loki/api/v1/push"

thanos:
  query:
    # URLs of exposed Thanos query components on remote workload clusters
    # For workload cluster defined in thanosQueryEnvoySidecar format is
    # dnssrv+_http-<cluster name>._tcp.<name of query envoy service>.<namespace>.svc.cluster.
    stores:
      - dnssrv+_http-workload-cluster-1._tcp.thanos-query-envoy.default.svc.cluster.

kube-prometheus-stack:
  prometheus: 
    prometheusSpec:
      externalLabels: 
        cluster: observer-cluster
  grafana:
    ingress:
      enabled: true
      hosts:
        - test.grafana.dnation
        #- <grafana-endpoint>
