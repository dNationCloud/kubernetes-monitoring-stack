# !IMPORTANT: each cluster must have prometheus and promtail external label 'cluster' with unique value.
# This will be used as cluster discriminator when metrics are aggregated on observer cluster.

thanosStorage:
  # More details about supported storage types and config options can be found here: https://thanos.io/tip/thanos/storage.md/
  config: |-
   type: S3
   config:
     endpoint: "<url-of-the-S3-endpoint>"
     bucket: "<observer-bucket-name>"
     access_key: "<access-key>"
     secret_key: "<secret-key>"
     insecure: false
     signature_version2: false
     part_size: 0

thanosQueryEnvoySidecar:
  config:
   - name: "cluster-1"
     listenPort: 10001
     queryUrl: <url of exposed query component on remote workload cluster>
     queryPort: <port of exposed query component on remote workload cluster>
     tls:
       certificate_chain: /certs/tls.crt
       private_key: /certs/tls.key
       trusted_ca: /certs/ca.crt

promtail:
  config:
    client:
      external_labels:
        cluster: observer-cluster
    lokiAddress: "http://{{ .Release.Name }}-loki-gateway/loki/api/v1/push"

thanos:
  global:
    storageClass: <storage-class>
  query:
    # URLs of exposed Thanos query components on remote workload clusters
    # For workload cluster defined in thanosQueryEnvoySidecar format is
    # dnssrv+_http-<cluster name>._tcp.<name of query envoy service>.<namespace>.svc.cluster.local
    stores:
      - dnssrv+_http-cluster-1._tcp.thanos-query-envoy.monitoring.svc.cluster.local

kube-prometheus-stack:
  prometheus:
    prometheusSpec:
      externalLabels:
        cluster: observer-cluster
  grafana:
    ingress:
      enabled: true
      hosts:
        - <grafana-endpoint>
      tls:
      - secretName: <grafana-secret-name>
        hosts:
        - <grafana-endpoint>
