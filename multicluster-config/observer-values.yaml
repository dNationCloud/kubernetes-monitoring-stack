#
# Copyright 2020 The dNation Kubernetes Monitoring Stack Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Values for dNation Kubernetes Monitoring Stack to be used in addition
# to default values.yaml for deploying thanos components for multicluster
# monitorig at observer
# Declare variables to be passed into helm chart dependencies.

thanosStorage:
  secret:
    name: thanos-objstore-config
    key: objstore.yml
  # More details about supported storage types and config options can be found here: https://thanos.io/tip/thanos/storage.md/
  config: ""

thanosQueryEnvoySidecar:
  enabled: true
  # define whole envoy-config as string
  #  envoyConfigOverride: ""
  #  envoyConfig:
  service:
    name: thanos-query-envoy
    labels:
      name: thanos-query-envoy
    selector:
      app.kubernetes.io/component: query
      app.kubernetes.io/name: thanos
  config: []

## Configure additional grafana datasources
grafanaDatasourcesAsConfigMap:
  cluster-metrics:
    - name: thanos
      isDefault: true
      type: prometheus
      access: proxy
      url: "http://thanos-query-frontend:9090"

thanos:
  enabled: true
  existingObjstoreSecret: thanos-objstore-config
  queryFrontend:
    enabled: true
  query:
    replicaLabel:
      - prometheus_replica
    dnsDiscovery:
      sidecarsService: kube-prometheus-thanos-discovery
      sidecarsNamespace: "{{ .Release.Namespace }}"
    # URLs of exposed Thanos query components on remote workload clusters
    stores: []

    # Envoy sidecar for communication with workload clusters
    sidecars:
    - name: envoy-sidecar
      image: 'envoyproxy/envoy:v1.20.1'
      imagePullPolicy: IfNotPresent
      args:
        - '-c'
        - /config/envoy.yaml
      volumeMounts:
        - name: envoy-config
          mountPath: /config
          mountPropagation: None
        - name: envoy-certs
          mountPath: /certs
          mountPropagation: None
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File

    extraVolumes:
      - name: envoy-config
        configMap:
          name: thanos-query-envoy-config
          defaultMode: 420
          optional: false
      - name: envoy-certs
        secret:
          secretName: thanos-query-envoy-certs
          defaultMode: 420
          optional: false

  bucketweb:
    enabled: true
  compactor:
    enabled: true
  storegateway:
    enabled: true
  ruler:
    enabled: false

kube-prometheus-stack:
  enabled: true
#  # disable because workloads prometheuses are not conencted to alertmanagers
#  defaultRules:
#    disabled:
#      PrometheusNotConnectedToAlertmanagers: true
  alertmanager:
    alertmanagerSpec:
      replicas: 2
    servicePerReplica:
      enabled: true
  grafana:
    # More details here: https://grafana.com/docs/grafana/latest/administration/set-up-for-high-availability/
    # replicas: 2
    ingress:
      enabled: true
      hosts: []
    sidecar:
      dashboards:
        multicluster:
          global:
            enabled: true
          etcd:
            enabled: true
  prometheus:
    prometheusSpec:
      # !IMPORTANT: each cluster must have prometheus external label 'cluster' with unique value.
      # This will be used as cluster discriminator when metrics are aggregated on observer cluster.
      externalLabels: 
        cluster: "observer-cluster"
      replicas: 2
      thanos:
        objectStorageConfig: 
          name: thanos-objstore-config
          key: objstore.yml
    thanosService: 
      enabled: true
